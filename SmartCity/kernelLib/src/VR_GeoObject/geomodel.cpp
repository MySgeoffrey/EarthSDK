//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : CGeoModel.cpp
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#include "geoobject/geomodel.h"
#include "osg/MatrixTransform"
#include "framework/core/ispatialparameter.h"
#include <osgEarth/URI>
#include <osgEarth/Registry>

namespace Geo
{
	CGeoModel::CGeoModel()
	{
		this->mModelURL = "";
		this->mpNodeLocator = NULL;
		this->mType = "GeoModel";
	}

	CGeoModel::CGeoModel(osgEarth::MapNode* pRefMapNode)
		: Core::IGeoModel(pRefMapNode)
	{
		this->mModelURL = "";
		this->mpNodeLocator = NULL;
		this->mType = "GeoModel";
	}

	CGeoModel::CGeoModel(const std::string& modelURL, osgEarth::MapNode* pRefMapNode)
		: Core::IGeoModel(pRefMapNode)
	{
		this->mModelURL = modelURL;
		this->mpNodeLocator = NULL;
		this->mType = "GeoModel";
	}

	CGeoModel::~CGeoModel()
	{
		
	}

	bool CGeoModel::loadToScene()
	{
		bool r = false;
		osg::Node* pModelNode = osgEarth::URI(this->mModelURL).getNode();
		
		if (pModelNode)
		{
			Core::ISpatialParameter* pSpatialParam = this->getOrCreateSpatialParameter();
			osg::MatrixTransform* mt = new osg::MatrixTransform();

			mt->setMatrix(
				osg::Matrixd::scale(pSpatialParam->getScale()) *
				osg::Matrixd::rotate(
				osg::DegreesToRadians(pSpatialParam->getRotate().x()), osg::Vec3(1, 0, 0),
				osg::DegreesToRadians(pSpatialParam->getRotate().y()), osg::Vec3(0, 1, 0),
				osg::DegreesToRadians(pSpatialParam->getRotate().z()), osg::Vec3(0, 0, 1)));

			mt->addChild(pModelNode);

			if (this->mpNodeLocator == NULL)
			{
				this->mpNodeLocator = new osgEarth::Util::ObjectLocatorNode(this->mpRefMapNode->getMap());
			}

			this->mpNodeLocator->getLocator()->setPosition(this->getGeoPosition());

			this->mpNodeLocator->addChild(mt);
			this->mObjectId = osgEarth::Registry::objectIndex()->tagNode(this->mpNodeLocator, this);

			this->mpNodeLocator->setName(this->mModelURL);
			r = true;
		}
		return r;
	}

	bool CGeoModel::renderToScene()
	{
		bool r = false;
		if (this->mpNodeLocator)
		{
			this->mpRefMapNode->addChild(this->mpNodeLocator);
			r = true;
		}
		return r;
	}

	bool CGeoModel::deRenderFromScene()
	{
		bool r = false;
		
		return r;
	}

	bool CGeoModel::unLoadFromScene()
	{
		bool r = false;
		if (this->mpNodeLocator && this->mpNodeLocator->getNumParents() > 0)
		{
			this->mpNodeLocator->getParent(0)->removeChild(this->mpNodeLocator);
			this->mpNodeLocator = NULL;
			r = true;
		}
		return r;
	}
	
}
