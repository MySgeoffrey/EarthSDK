//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cgeographiccreator.cpp
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#include "geographic/geographiccreator.h"
#include "geographic/geographictype.h"
#include "geographic/geodoublearrow.h"
#include "geographic/geodirectarrow.h"
#include "geographic/geocirlce.h"
#include "geographic/geopoint.h"
#include "geographic/geoline.h"
#include "geographic/geoellipse.h"
#include "geographic/rectangle.h"
#include "geographic/geofreeline.h"
#include "geographic/geobezierarrow.h"
#include "geographic/geosector.h"

namespace Graphic
{
	Common::ISceneObject* CGeoGraphicCreator::createGraphicObject(
		const std::string& graphicType,osgEarth::MapNode* pRefMapNode)
	{
		Common::ISceneObject* pGraphicObject = NULL;
		if (graphicType == Graphic::GT_DOUBLEARROW)
		{
			pGraphicObject = new CGeoDoubleArrow(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_DIRECTARROW)
		{
			pGraphicObject = new CGeoDirectArrow(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_BEZIERARROW)
		{
			pGraphicObject = new CGeoBezierArrow(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_CIRCLE)
		{
			pGraphicObject = new CGeoCircle(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_ELLIPSE)
		{
			pGraphicObject = new CGeoEllipse(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_RECTANGLE)
		{
			pGraphicObject = new CGeoRectangle(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_POINT)
		{
			pGraphicObject = new CGeoPoint(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_POLYLINE)
		{
			pGraphicObject = new CGeoLine(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_POLYGON)
		{
			pGraphicObject = new CGeoPolygon(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_TRIANGLE)
		{
			pGraphicObject = new CGeoTriangle(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_SECTOR)
		{
			pGraphicObject = new CGeoSector(pRefMapNode);
		}
		else if (graphicType == Graphic::GT_FREELINE)
		{
			pGraphicObject = new CGeoFreeLine(pRefMapNode);
		}
		return pGraphicObject;
	}
}
