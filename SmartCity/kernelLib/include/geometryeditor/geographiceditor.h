#define _use_newmode_ 1

#if _use_newmode_ == 0
//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cgeographiceditor.h
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#if !defined(_CGEOGRAPHICEDITOR_H)
#define _CGEOGRAPHICEDITOR_H

#include "geometryeditor/geometryeditorconfig.h"
#include "geometryeditor/polygoneditor.h"
#include "geographic/geopoint.h"

namespace GeometryEditor
{
	class VR_GEOMETRYEDITOR_DLL IGeoGraphicEditor
		: public IPolygonEditor
	{
	public:
		IGeoGraphicEditor(osgEarth::MapNode* pRefMapNode);

		virtual ~IGeoGraphicEditor();

		virtual void beginEdit(const std::string& graphicType,
			Common::ISceneObject* pGraphicObject,
			const bool& hideOriginGraphicObject = true);

		virtual bool endEdit(
			const bool& clearCurrentGeometry = true,
			const bool& needSaveEditingResult = true,
			const bool& hideOriginGraphicObject = true);

		virtual Common::ISceneObject* generateSceneObject();

		void initial();

		// 设置高亮信息
		void setHighLightInfo(
			const osgEarth::Symbology::Color& highLightColor,
			const double& highLightWidth);

		// 获取高亮信息
		void getHighLightInfo(
			osgEarth::Symbology::Color& highLightColor,
			double& highLightWidth);

		void setNeedInsertPointByMouse(const bool& value);

		bool getNeedInsertPointByMouse();

		// 经纬度信息
		virtual void performPicked(osg::Vec3d pos);

		virtual void performMoving(osg::Vec3d pos);

		virtual void performPickedXYZ(osg::Vec3d pos);

		virtual void performMovingXYZ(osg::Vec3d pos);

		virtual void performRightPicked();

		virtual void performDeleteDrawing();

		virtual bool performMoveGraphic(osg::Vec3d pos);

		virtual bool performEndMoveGraphic(osg::Vec3d pos);

	protected:
		Common::ISceneObject* mpEditingObject;
		Common::ISceneObject* mpRefUserObject;
		Graphic::CGeoPoint* mpEditContent;
		bool mExistMovePoint;
		osgEarth::Symbology::Color mHighLightColor;
		double mHighLightWidth;
		bool mNeedInsertPointByMouse;
	};
}


#endif  //_CGEOGRAPHICEDITOR_H

#else
//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cgeographiceditor.h
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#if !defined(_CGEOGRAPHICEDITOR_H)
#define _CGEOGRAPHICEDITOR_H

#include "geometryeditor/geometryeditorconfig.h"
#include "geometryeditor/polygoneditor.h"
#include "geographic/geopoint.h"

namespace GeometryEditor
{
	class VR_GEOMETRYEDITOR_DLL IGeoGraphicEditor
		: public IPolygonEditor
	{
	public:
		IGeoGraphicEditor(osgEarth::MapNode* pRefMapNode);

		virtual ~IGeoGraphicEditor();

		virtual void beginEdit(const std::string& graphicType,
			Common::ISceneObject* pGraphicObject,
			const bool& hideOriginGraphicObject = true);

		virtual bool endEdit(
			const bool& clearCurrentGeometry = true,
			const bool& needSaveEditingResult = true,
			const bool& hideOriginGraphicObject = true);

		virtual Common::ISceneObject* generateSceneObject();

		void initial();

		// 设置高亮信息
		void setHighLightInfo(
			const osgEarth::Symbology::Color& highLightColor,
			const double& highLightWidth);

		// 获取高亮信息
		void getHighLightInfo(
			osgEarth::Symbology::Color& highLightColor,
			double& highLightWidth);

		void setNeedInsertPointByMouse(const bool& value);

		bool getNeedInsertPointByMouse();

		// 经纬度信息
		virtual void performPicked(osg::Vec3d pos);

		virtual void performMoving(osg::Vec3d pos);

		virtual void performPickedXYZ(osg::Vec3d pos);

		virtual void performMovingXYZ(osg::Vec3d pos);

		virtual void performRightPicked();

		virtual void performDeleteDrawing();

		virtual bool performMoveGraphic(osg::Vec3d pos);

		virtual bool performEndMoveGraphic(osg::Vec3d pos);

	protected:
		Common::ISceneObject* mpEditingObject;
		Graphic::CGeoPoint* mpEditContent;
		bool mExistMovePoint;
		osgEarth::Symbology::Color mHighLightColor;
		double mHighLightWidth;
		osgEarth::Symbology::Color mGraphicColor;
		double mOutlineWidth;
		bool mNeedInsertPointByMouse;
	};
}


#endif  //_CGEOGRAPHICEDITOR_H

#endif