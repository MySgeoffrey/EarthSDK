//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : igeopoint.h
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#if !defined(_CGEOGRID_H)
#define _CGEOGRID_H

#include "framework/core/igeopoint.h"
#include "geoobject/geoobject_global.h"
#include <osgEarthSymbology/Style>

// 地理圆
namespace Geo
{
	class VR_GEOOBJECT_EXPORT CGeoRingGrid 
		: public Core::IGeoPoint
	{
    public:

		CGeoRingGrid();

		CGeoRingGrid(osgEarth::MapNode* pRefMapNode);

		virtual ~CGeoRingGrid();

		virtual void setRadius(const double& radius);

		virtual double getRadius();

		virtual void setSubRingCount(const int& ringCount);

		virtual int getSubRingCount();

		virtual void setSectorCount(const int& sectorCount);

		virtual int getSectorCount();

		virtual bool loadToScene();

		virtual bool renderToScene();

		virtual bool deRenderFromScene();

		virtual bool unLoadFromScene();

		osgEarth::Symbology::Style& getStyle();

	protected:
		osgEarth::Symbology::Style mStyle;
		osg::Node* mpNode;
		double mRadius;
		int mSubRingCount;
		int mSectorCount;
    };

	class VR_GEOOBJECT_EXPORT CGeoRectGrid
		: public Core::IGeoPoint
	{
	public:

		CGeoRectGrid();

		CGeoRectGrid(osgEarth::MapNode* pRefMapNode);

		virtual ~CGeoRectGrid();

		virtual void setWidth(const double& width);

		virtual double getWidth();

		virtual void setHeight(const double& height);

		virtual double getHeight();

		virtual void setRowCount(const int& rowCount);

		virtual int getRowCount();

		virtual void setColCount(const int& colCount);

		virtual int getColCount();

		virtual bool loadToScene();

		virtual bool renderToScene();

		virtual bool deRenderFromScene();

		virtual bool unLoadFromScene();

		osgEarth::Symbology::Style& getStyle();

	protected:
		osgEarth::Symbology::Style mStyle;
		osg::Node* mpNode;
		double mWdith;
		double mHeight;
		int mRowCount;
		int mColCount;
	};

}

#endif  //_CGEOGRID_H
