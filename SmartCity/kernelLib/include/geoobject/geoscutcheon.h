//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : igeoscutchenon.h
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#if !defined(_CGEOSCUTCHEON_H)
#define _CGEOSCUTCHEON_H

#include "framework/core/igeopoint.h"
#include "geoobject/scutcheonnode.h"
#include "geoobject/geoobject_global.h"
#include <osgEarthSymbology/Style>
#include <osgViewer/Viewer>
#include <osg/Camera>

// 地理标注
namespace Geo
{
	struct Field
	{
	public:
		Field(const std::string& fieldName,const std::string& fieldValue)
			:name(fieldName),value(fieldValue)
		{
			valid = true;
		}

	public:
		std::string name;
		std::string value;
		bool valid;
	};
	typedef std::vector<Field> Fields;
	/// <summary>
	/// CGeoScutcheon类，继承IGeoPoint类：地理几何点类，用于提供表达与渲染空间点的接口
	/// </summary>
	class VR_GEOOBJECT_EXPORT CGeoScutcheon 
		: public Core::IGeoPoint
	{
    public:
		/// <summary>
		/// 构造函数
		/// </summary>
		CGeoScutcheon();
		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="pRefMapNode">关联的地图节点</param>
		CGeoScutcheon(osgEarth::MapNode* pRefMapNode);
		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~CGeoScutcheon();

		void setViewer(osgViewer::Viewer* pRefViewer);

		osgViewer::Viewer* getViewer();

		void setScreenCamera(osg::Camera* pScreenCamera);

		osg::Camera* getScreenCamera();

		/// <summary>
		/// 加载直场景
		/// </summary>
		virtual bool loadToScene();
		/// <summary>
		/// 渲染至场景
		/// </summary>
		virtual bool renderToScene();
		/// <summary>
		/// 从场景中反挂接
		/// </summary>
		virtual bool deRenderFromScene();
		/// <summary>
		/// 从场景中卸载
		/// </summary>
		virtual bool unLoadFromScene();

		/// <summary>
		/// 获取风格
		/// </summary>
		osgEarth::Symbology::Style& getStyle();

		osgEarth::Symbology::Style& getTitleImageStyle();

		osgEarth::Symbology::TextSymbol* getTitleSymbol();

		osgEarth::Symbology::TextSymbol* getContentSymbol();

		osgEarth::Annotation::TrackNodeFieldSchema& getTrackNodeFieldSchema();

		virtual void updateSceneObject();

		Fields& getFields();

		void updateContent();

		void setScreenCoordinatesOffset(const osg::Vec2s& offset);

		osg::Vec2s getScreenCoordinatesOffset();

		std::string getSeparativeSign();

		void setSeparativeSign(const std::string& separativeSign);

		int getVerticalSpacing();

		void setVerticalSpacing(const int& verticalSpacing);

		int getTitleImageOffset();

		void setTitleImageOffset(const int& titleImageOffset);

		void setTitleImageSize(const osg::Vec2s& titleImageSize);

		osg::Vec2s getTitleImageSize();

		int getIntervalBetweenTitleAndContent();

		void setIntervalBetweenTitleAndContent(const int& intervalBetweenTitleAndContent);

		void setBackImageWidth(const int& backImageWidth);

		int getBackImageWidth();

		int getIntervalBetweenBottomAndContent();

		void setIntervalBetweenBottomAndContent(const int& intervalBetweenBottomAndContent);

		int getContentHorizontalOffset();

		void setContentHorizontalOffset(const int& contentHorizontalOffset);

		double contain(const int& x, const int& y ,osg::Camera* pCamera);

		osg::Vec3d getNearWorldPointToOrigin(osg::Camera* pCamera);
	protected:
		double createFieldSchema(
			osgEarth::Annotation::TrackNodeFieldSchema& schema);

		osg::Node * createTrackNode(osgEarth::MapNode* mapNode,
			const osgEarth::Annotation::TrackNodeFieldSchema& schema,
			const double& lon,
			const double& lat,
			const double& alt);
	protected:
		osgEarth::Symbology::Style mStyle;
		osgEarth::Symbology::Style mTitleImageStyle;
		osgEarth::Symbology::TextSymbol* mpTitleSymbol;
		osgEarth::Symbology::TextSymbol* mpContentSymbol;
		osgEarth::Annotation::TrackNodeFieldSchema mTrackNodeFieldSchema;
		Fields mFields;
		std::string mSeparativeSign;
		int mVerticalSpacing;
		int mIntervalBetweenTitleAndContent;
		int mTitleImageOffset;
		osg::Node* mpNode;
		osg::Vec2s mScreenCoordinatesOffset;
		osg::Vec2d mBackImageScale;
		osg::Vec2d mTitleImageScale;
		int mBackImageWidth;
		int mIntervalBetweenBottomAndContent;
		int mContentHorizontalOffset;
		osg::Vec2s mTitleImageSize;
		osg::Camera* mpRefScreenCamera;
		osgViewer::Viewer* mpRefViewer;
    };
}

#endif  //_CGEOSCUTCHEON_H
