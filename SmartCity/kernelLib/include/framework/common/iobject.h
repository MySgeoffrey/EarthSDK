//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : iobject.h
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#if !defined(_IOBJECT_H)
#define _IOBJECT_H

#include "framework/vr_globeframework_global.h"
#include <osg/Referenced>
#include <osgEarth/ObjectIndex>
#include <osgEarth/Config>

namespace Common
{
	// IObject类：系统框架数据对象接口类，提供基础操作接口，
	//包括对象的基本信息：唯一标识ID，名称以及类型等信息
	class VR_PIPEFRAMEWORK_EXPORT IObject
		: public osg::Referenced
    {
    public:

		// 构造函数
		IObject();

		// 析构函数
		virtual ~IObject() ;

		// 获取对象名称 
		virtual std::string getName();

		// 获取对象ID
		virtual std::string getID();

		// 获取对象类型
		virtual std::string getType();

		/// <summary>
		/// 设置对象的类型
		/// </summary>
		/// <param name="type">对象的类型</param>
		virtual void setType(const std::string& type);

		/// <summary>
		/// 设置对象的名称
		/// </summary>
		/// <param name="type">对象的名称</param>
		virtual void setName(const std::string& name);

		/// <summary>
		/// 设置对象的分组
		/// </summary>
		/// <param name="type">对象的分组</param>
		virtual void setGroup(const std::string& group);

		// 获取对象分组
		virtual std::string getGroup();

		/// <summary>
		/// 设置对象的ID
		/// </summary>
		/// <param name="type">对象的ID</param>
		virtual void setID(const std::string& id);

		/// <summary>
		/// 根据字段名称获取字段值
		/// </summary>
		/// <param name="fieldName">字段名称</param>
		std::string getValueByFieldName(const std::string& fieldName);

		/// <summary>
		/// 将对象信息转换成congfig
		/// </summary>
		/// <param name="config">config</param>
		virtual bool fromConfig(osgEarth::Config& config);

		/// <summary>
		/// 从congfig中获取对象信息
		/// </summary>
		/// <param name="config">config</param>
		virtual bool toConfig(osgEarth::Config& config);

	public:
		std::vector<std::string> FieldSet;
		std::map<std::string, std::string> PropertySet;

	protected:
		std::string mName;
		std::string mType;
		std::string mGroup;
		std::string mID;
		osgEarth::ObjectID mObjectId;
    };
}

#endif  //_IOBJECT_H
