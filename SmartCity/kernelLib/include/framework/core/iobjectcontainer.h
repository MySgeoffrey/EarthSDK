//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : iobjectcontainer.h
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#if !defined(_IOBJECTCONTAINER_H)
#define _IOBJECTCONTAINER_H

#include "framework/vr_globeframework_global.h"
#include "framework/common/iobject.h"
#include <map>
#include <vector>


namespace Core
{
	// 管线系统容器类，提供数据对象的批量存储与管理功能
	//对象由外部创建添加至本容器，对象的生命周期由容器对象来负责
	//即：容器对象在析构时会将容器中存在的对象全部释放掉
	class VR_PIPEFRAMEWORK_EXPORT IObjectContainer
    {
    public:

		IObjectContainer();

		virtual ~IObjectContainer();

		virtual bool addObject(Common::IObject* pObject);

		virtual Common::IObject* getObject(const std::string& id);

		virtual int getNumOfObjects();

		virtual bool getKeys(std::vector<std::string>& keys);

		virtual Common::IObject* removeObject(const std::string& id);

		virtual bool removeAllObjects();

		virtual bool removeAndDestroyAllObjects();

	private:
		typedef std::map<std::string, Common::IObject*> ObjectMap;
		ObjectMap mObjects;
    };
}

#endif  //_IOBJECTCONTAINER_H
