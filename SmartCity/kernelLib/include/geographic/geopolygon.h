//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cgeopolygon.h
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#if !defined(_CGRAHPICPOLYGON_H)
#define _CGRAHPICPOLYGON_H

#include "framework/core/igeopolygon.h"
#include "geographic/geographicconfig.h"
#include <osgEarthSymbology/Style>

namespace Graphic
{
	class CGeoLine;
	class VR_GEOGRAPHIC_EXPORT CGeoSurface
	{
	public:
		CGeoSurface();

		virtual ~CGeoSurface();

		virtual osg::Node* createNode(
			std::vector<osg::Vec3d>& renderGeometry,
			osgEarth::Symbology::Style& renderStyle,
			osgEarth::MapNode* pMapNode);
	};

	class VR_GEOGRAPHIC_EXPORT CGeoPolygon 
		: public Core::IGeoPolygon,public CGeoSurface
	{
	public:
		/// <summary>
		/// 构造函数
		/// </summary>
		CGeoPolygon();
		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="pRefMapNode">关联的地图节点</param>
		CGeoPolygon(osgEarth::MapNode* pRefMapNode);
		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~CGeoPolygon();

		/// <summary>
		/// 加载至场景
		/// </summary>
		virtual bool loadToScene();
		/// <summary>
		/// 渲染至场景
		/// </summary>
		virtual bool renderToScene();
		/// <summary>
		/// 从场景中反挂接
		/// </summary>
		virtual bool deRenderFromScene();
		/// <summary>
		/// 从场景中卸载
		/// </summary>
		virtual bool unLoadFromScene();

		virtual void updateSceneObject();

		virtual void copyTo(Common::ISceneObject* pDestObject);
	protected:
		virtual bool transformRenderGeometry(std::vector<osg::Vec3d>& outRenderGeometry);
		virtual bool loadToScene(std::vector<osg::Vec3d>& renderGeometry);
	protected:
		osg::Node* mpNode;
		CGeoLine* mpOutLine;
	};

	class VR_GEOGRAPHIC_EXPORT CGeoTriangle 
		: public CGeoPolygon
	{
	public:
		/// <summary>
		/// 构造函数
		/// </summary>
		CGeoTriangle();
		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="pRefMapNode">关联的地图节点</param>
		CGeoTriangle(osgEarth::MapNode* pRefMapNode);
		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~CGeoTriangle();
	};
}


#endif  //_CGRAHPICPOLYGON_H
