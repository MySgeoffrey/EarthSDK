//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : bezierarithmetric.h
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#if !defined(_CGEOARITHMETIC_H)
#define _CGEOARITHMETIC_H

#include "framework/core/igeopoint.h"
#include "geographic/geographicconfig.h"

namespace Graphic
{
	class VR_GEOGRAPHIC_EXPORT CBezierArithmetic
	{
	public:
		static osg::Vec3d getBezierPointByRate(osg::Vec3d curvePoint[], float t);

		static void getBezierPointsLeft(osg::Vec3d bezierPoints[], std::vector<osg::Vec3d>& linePoints,const int& pointNum = 50);

		static void getBezierPointsRight(osg::Vec3d bezierPoints[], std::vector<osg::Vec3d>& linePoints,const int& pointNum = 50);

		static bool createBezierArrow(
			std::vector<osg::Vec3d>& originPoints,
			std::vector<osg::Vec3d>& results);

		static bool createDirectArrow(
			std::vector<osg::Vec3d>& originPoints,
			std::vector<osg::Vec3d>& results);

		static bool createDoubleArrow(
			std::vector<osg::Vec3d>& originPoints,
			std::vector<osg::Vec3d>& results);

		//此方法用来计算二项式系数
		//接受一个数组对象的引用
		static void binomialCoefficient(std::vector<int> &C);

		//此方法计算在第规律u处点的坐标位置
		//接受的第一个参数为规律u，第二个参数为将要存放位置点的指针，第三个参数为所有控制点坐标数组，第五个参数为系数数组)
		static void computeBezPt(float u,osg::Vec3d &bezPt,std::vector<osg::Vec3d>&ctrlPts,std::vector<int> &C);

		//此方法为调用方法，用来产生贝塞尔曲线
		//第一个参数用来接受控制点数组，第二个参数为精度，精度越高两个点之间的距离越小，但是需要的计算时间也就越长
		static void bezierLine(
			std::vector<osg::Vec3d> &ctrlPts,
			std::vector<osg::Vec3d>& bezPts,
			int precision);
	};

}

#endif  //_CGEOARITHMETIC_H
