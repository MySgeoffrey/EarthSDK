//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 蚂蚁空间信息平台
//  @ File Name : igeoline.h
//  @ Date : 2017/8/21
//  @ Author : 
//
//


#if !defined(_CGEOGRAPHICLINE_H)
#define _CGEOGRAPHICLINE_H

#include "framework/core/igeoline.h"
#include "geographic/geographicconfig.h"
#include <osgEarthSymbology/Style>

// 地理线串
namespace Graphic
{
	/// <summary>
	/// CGeoLine类，继承IGeoLine类，几何线组织与渲染对象，实现IGeoLine的接口，
	/// 用来表达空间地理线串,由一系列点坐标构成。
	/// </summary>
	class VR_GEOGRAPHIC_EXPORT CGeoLine
		: public Core::IGeoLine
    {
    public:
		/// <summary>
		/// 构造函数
		/// </summary>
		CGeoLine();
		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="pRefMapNode">关联的地图节点</param>
		CGeoLine(osgEarth::MapNode* pRefMapNode);
		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~CGeoLine();
		/// <summary>
		/// 加载直场景
		/// </summary>
		virtual bool loadToScene();
		/// <summary>
		/// 渲染至场景
		/// </summary>
		virtual bool renderToScene();
		/// <summary>
		/// 从场景中反挂接
		/// </summary>
		virtual bool deRenderFromScene();
		/// <summary>
		/// 从场景中卸载
		/// </summary>
		virtual bool unLoadFromScene();
		
		virtual void updateSceneObject();

		osg::Node* createNode(
			std::vector<osg::Vec3d>& renderGeometry,
			osgEarth::Symbology::Style& renderStyle,
			osgEarth::MapNode* pMapNode);

		void setUseCustomRenderMode(const bool& value);

		bool getUseCustomRenderMode();
	protected:
		virtual bool transformRenderGeometry(std::vector<osg::Vec3d>& outRenderGeometry);
		virtual bool loadToScene(std::vector<osg::Vec3d>& renderGeometry);
		virtual void computeRenderGeometry(
			std::vector<osg::Vec3d>& inRenderGeometry,
			std::vector<osg::Vec3d>& outRenderGeometry,
			osg::Vec3d& referenceCenter);
	protected:
		osg::Node* mpNode;
		bool mUseCustomRenderMode;
    };
}

#endif  //_CGEOGRAPHICLINE_H
