//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cgeocirlce.h
//  @ Date : 2018/7/28
//  @ Author : sgeoffrey
//  @platform:蚂蚁空间信息平台
//


#if !defined(_CGRAPHICCIRLCE_H)
#define _CGRAPHICCIRLCE_H

#include "framework/core/igeopoint.h"
#include "geographic/geopolygon.h"
#include "geographic/geographicconfig.h"

namespace Graphic
{
	class VR_GEOGRAPHIC_EXPORT CGeoCircle 
		: public CGeoPolygon
	{
	public:
		/// <summary>
		/// 构造函数
		/// </summary>
		CGeoCircle();
		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="pRefMapNode">关联的地图节点</param>
		CGeoCircle(osgEarth::MapNode* pRefMapNode);
		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~CGeoCircle();

		virtual bool loadToScene();

		virtual void updateSceneObject();

		virtual void setRadius(const double& radius);

		virtual double getRadius();

		virtual void setBeginAngle(const double& beginAngle);

		virtual void setEndAngle(const double& endAngle);

		virtual double getBeginAngle();

		virtual double getEndAngle();

		virtual void copyTo(Common::ISceneObject* pDestObject);

		virtual std::vector<osg::Vec3d>& getGeometry();

		virtual bool contain(const osg::Vec3d& geoPoint);
	protected:
		virtual bool transformRenderGeometry(std::vector<osg::Vec3d>& outRenderGeometry);
		double mBeginAngle;
		double mEndAngle;
		double mRadius;
	};
}
#endif  //_CGRAPHICCIRLCE_H
