//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : MyS57Chart
//  @ File Name : imylayer.h
//  @ Date : 2017/10/20
//  @ Author : sgeoffrey
//
//


#if !defined(_IMYLAYER_H)
#define _IMYLAYER_H

#include "mychartmaplib/imydrawable.h"
#include "mychartcommonlib/mygeoobject.h"
#include "mychartmaplib/imysymbol.h"

namespace MyChart
{
	class IMyShapeRecord;
	class IMyProperty;
	enum GeometryType;
	/// <summary>
	/// 图层基类
	/// </summary>
	class MYCHARTMAPLIB_EXPORT IMyLayer 
		: public IMyDrawable , public IMyGeoObject
	{
	public:
		/// <summary>
		/// 构造函数
		/// </summary>
		IMyLayer();

		/// <summary>
		/// 构造函数
		/// </summary>
		/// <param name="name">名称</param>
		IMyLayer(const QString& name);

		/// <summary>
		/// 析构函数
		/// </summary>
		virtual ~IMyLayer();

		/// <summary>
		/// 获取图层要素集
		/// </summary>
		/// <returns>图层要素集</returns>
		virtual std::vector<IMyShapeRecord*>& getRecords();

		/// <summary>
		/// 获取图层属性集
		/// </summary>
		/// <returns>图层属性集</returns>
		virtual IMyProperty* getProperty();

		/// <summary>
		/// 获取图层几何类型
		/// </summary>
		/// <returns>图层几何类型</returns>
		virtual GeometryType getType();

		/// <summary>
		/// 获取图层类型
		/// </summary>
		/// <returns>图层类型</returns>
		virtual QString getLayerType();

		/// <summary>
		/// 获取图层风格
		/// </summary>
		/// <returns>图层风格</returns>
		virtual IMySymbol* getSymbol();

		/// <summary>
		/// 是否处于编辑状态
		/// </summary>
		/// <returns>编辑状态</returns>
		virtual bool isEditState();

		/// <summary>
		/// 设置编辑状态
		/// </summary>
		/// <param name="isEditState">编辑状态</param>
		virtual void setEditState(const bool& isEditState);

	protected:
		std::vector<IMyShapeRecord*> mRecords;
		IMyProperty* mpProperty;
		bool mIsEditState;
	};
}
#endif  //_IMYLAYER_H
